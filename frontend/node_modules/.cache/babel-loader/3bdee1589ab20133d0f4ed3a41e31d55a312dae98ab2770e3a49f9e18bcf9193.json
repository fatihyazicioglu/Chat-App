{"ast":null,"code":"var _jsxFileName = \"/home/user/app/e11/Chat-App/frontend/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport \"./Sidebar.css\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sidebar() {\n  _s();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  function joinRoom(room) {\n    let isPublic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (!user) {\n      return alert(\"Please login\");\n    }\n    socket.emit(\"join-room\", room, currentRoom);\n    setCurrentRoom(room);\n    if (isPublic) {\n      setPrivateMemberMsg(null);\n    }\n    //dispatch for notifications\n    dispatch(resetNotifications(room));\n  }\n  socket.off(\"notifications\").on(\"notifications\", room => {\n    if (currentRoom != room) dispatch(addNotifications(room));\n  });\n  socket.off(\"new-user\").on(\"new-user\", payload => {\n    setMembers(payload);\n  });\n  function orderIds(id1, id2) {\n    if (id1 > id2) {\n      return id1 + \"-\" + id2;\n    } else {\n      return id2 + \"-\" + id1;\n    }\n  }\n  function handlePrivateMemberMsg(member) {\n    setPrivateMemberMsg(member);\n    const roomId = orderIds(user._id, member._id);\n    joinRoom(roomId, false);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: rooms.map((room, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        onClick: () => joinRoom(room),\n        active: room === currentRoom,\n        style: {\n          cursor: \"pointer\",\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [room, currentRoom !== room && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge rounded-pill bg-primary\",\n          children: user.newMessages[room]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 38\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), members.map(member => {\n      var _privateMemberMsg;\n      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        style: {\n          cursor: \"pointer\"\n        },\n        active: ((_privateMemberMsg = privateMemberMsg) === null || _privateMemberMsg === void 0 ? void 0 : _privateMemberMsg._id) == (member === null || member === void 0 ? void 0 : member._id),\n        onClick: () => handlePrivateMemberMsg(member),\n        disabled: member._id === user._id,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 2,\n            className: \"member-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: member.picture,\n              className: \"member-status-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), member.status == \"online\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-circle sidebar-online-status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 58\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-circle sidebar-offline-status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 116\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 9,\n            children: [member.name, member._id === (user === null || user === void 0 ? void 0 : user._id) && \" (You)\", member.status == \"offline\" && \" (Offline)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge rounded-pill bg-primary\",\n              children: user.newMessages[orderIds(member._id, user._id)]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 12\n        }, this)\n      }, member.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true);\n}\n_s(Sidebar, \"xXvxOehHJpw/X5Imivu/2I1+3NA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useContext","Col","ListGroup","Row","useDispatch","useSelector","AppContext","addNotifications","resetNotifications","Sidebar","user","state","dispatch","joinRoom","room","isPublic","alert","socket","emit","currentRoom","setCurrentRoom","setPrivateMemberMsg","off","on","payload","setMembers","orderIds","id1","id2","handlePrivateMemberMsg","member","roomId","_id","rooms","map","idx","cursor","display","justifyContent","newMessages","members","privateMemberMsg","picture","status","name","id"],"sources":["/home/user/app/e11/Chat-App/frontend/src/components/Sidebar.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport \"./Sidebar.css\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\n\nfunction Sidebar() {\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n\n  \n  function joinRoom(room, isPublic = true) {\n    if (!user) {\n      return alert(\"Please login\");\n    }\n    socket.emit(\"join-room\", room, currentRoom);\n    setCurrentRoom(room);\n\n    if (isPublic) {\n      setPrivateMemberMsg(null);\n    }\n    //dispatch for notifications\n    dispatch(resetNotifications(room));\n  }\n  socket.off(\"notifications\").on(\"notifications\", (room) => {\n    if (currentRoom != room) dispatch(addNotifications(room));\n  });\n  \n\n  \n  socket.off(\"new-user\").on(\"new-user\", (payload) => {\n    setMembers(payload);\n  });\n\n  function orderIds(id1, id2) {\n    if (id1 > id2) {\n      return id1 + \"-\" + id2;\n    } else {\n      return id2 + \"-\" + id1;\n    }\n  }\n\n  function handlePrivateMemberMsg(member) {\n    setPrivateMemberMsg(member);\n    const roomId = orderIds(user._id, member._id);\n    joinRoom(roomId, false);\n  }\n\n  if (!user) {\n    return <></>;\n  }\n  return (\n    <>\n      <h2>Available rooms</h2>\n      <ListGroup>\n        {rooms.map((room, idx) => (\n          <ListGroup.Item\n            key={idx}\n            onClick={() => joinRoom(room)}\n            active={room === currentRoom}\n            style={{\n              cursor: \"pointer\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {room}\n            {currentRoom !== room && <span className=\"badge rounded-pill bg-primary\">{user.newMessages[room]}</span>}\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n      <h2>Members</h2>\n      {members.map((member) => (\n        <ListGroup.Item\n          key={member.id}\n          style={{ cursor: \"pointer\" }}\n          active={privateMemberMsg?._id == member?._id}\n          onClick={() => handlePrivateMemberMsg(member)}\n          disabled={member._id === user._id}\n        >\n           <Row>\n                        <Col xs={2} className=\"member-status\">\n                            <img src={member.picture} className=\"member-status-img\" />\n                            {member.status == \"online\" ? <i className=\"fas fa-circle sidebar-online-status\"></i> : <i className=\"fas fa-circle sidebar-offline-status\"></i>}\n                        </Col>\n                        <Col xs={9}>\n                            {member.name}\n                            {member._id === user?._id && \" (You)\"}\n                            {member.status == \"offline\" && \" (Offline)\"}\n                        </Col>\n                        <Col xs={1}>\n                            <span className=\"badge rounded-pill bg-primary\">{user.newMessages[orderIds(member._id, user._id)]}</span>\n                        </Col>\n                    </Row>\n        </ListGroup.Item>\n      ))}\n    </>\n  );\n}\n\nexport default Sidebar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
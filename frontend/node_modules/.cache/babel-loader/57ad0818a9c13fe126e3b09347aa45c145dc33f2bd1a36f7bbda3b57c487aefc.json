{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import appApi from\"../services/appApi\";export var userSlice=createSlice({name:\"user\",initialState:null,reducers:{addNotifications:function addNotifications(state,_ref){var payload=_ref.payload;if(state.newMessages[payload]){state.newMessages[payload]=state.newMessages[payload]+1;}else{state.newMessages[payload]=1;}},resetNotifications:function resetNotifications(state,_ref2){var payload=_ref2.payload;delete state.newMessages[payload];}},extraReducers:function extraReducers(builder){// save user after signup\nbuilder.addMatcher(appApi.endpoints.signupUser.matchFulfilled,function(state,_ref3){var payload=_ref3.payload;return payload;});// save user after login\nbuilder.addMatcher(appApi.endpoints.loginUser.matchFulfilled,function(state,_ref4){var payload=_ref4.payload;return payload;});// logout: destroy user session\nbuilder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled,function(){return null;});}});var _userSlice$actions=userSlice.actions,addNotifications=_userSlice$actions.addNotifications,resetNotifications=_userSlice$actions.resetNotifications;export{addNotifications,resetNotifications};export default userSlice.reducer;","map":{"version":3,"names":["createSlice","appApi","userSlice","name","initialState","reducers","addNotifications","state","payload","newMessages","resetNotifications","extraReducers","builder","addMatcher","endpoints","signupUser","matchFulfilled","loginUser","logoutUser","actions","reducer"],"sources":["/home/user/app/e11/Chat-App/frontend/src/features/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport appApi from \"../services/appApi\";\n\nexport const userSlice = createSlice({\n    name: \"user\",\n    initialState: null,\n    reducers: {\n        addNotifications: (state, { payload }) => {\n            if (state.newMessages[payload]) {\n                state.newMessages[payload] = state.newMessages[payload] + 1;\n            } else {\n                state.newMessages[payload] = 1;\n            }\n        },\n        resetNotifications: (state, { payload }) => {\n            delete state.newMessages[payload];\n        },\n    },\n\n    extraReducers: (builder) => {\n        // save user after signup\n        builder.addMatcher(appApi.endpoints.signupUser.matchFulfilled, (state, { payload }) => payload);\n        // save user after login\n        builder.addMatcher(appApi.endpoints.loginUser.matchFulfilled, (state, { payload }) => payload);\n        // logout: destroy user session\n        builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\n    },\n});\n\nexport const { addNotifications, resetNotifications } = userSlice.actions;\nexport default userSlice.reducer; "],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,MAAOC,OAAM,KAAM,oBAAoB,CAEvC,MAAO,IAAMC,UAAS,CAAGF,WAAW,CAAC,CACjCG,IAAI,CAAE,MAAM,CACZC,YAAY,CAAE,IAAI,CAClBC,QAAQ,CAAE,CACNC,gBAAgB,CAAE,0BAACC,KAAK,MAAkB,IAAdC,QAAO,MAAPA,OAAO,CAC/B,GAAID,KAAK,CAACE,WAAW,CAACD,OAAO,CAAC,CAAE,CAC5BD,KAAK,CAACE,WAAW,CAACD,OAAO,CAAC,CAAGD,KAAK,CAACE,WAAW,CAACD,OAAO,CAAC,CAAG,CAAC,CAC/D,CAAC,IAAM,CACHD,KAAK,CAACE,WAAW,CAACD,OAAO,CAAC,CAAG,CAAC,CAClC,CACJ,CAAC,CACDE,kBAAkB,CAAE,4BAACH,KAAK,OAAkB,IAAdC,QAAO,OAAPA,OAAO,CACjC,MAAOD,MAAK,CAACE,WAAW,CAACD,OAAO,CAAC,CACrC,CACJ,CAAC,CAEDG,aAAa,CAAE,uBAACC,OAAO,CAAK,CACxB;AACAA,OAAO,CAACC,UAAU,CAACZ,MAAM,CAACa,SAAS,CAACC,UAAU,CAACC,cAAc,CAAE,SAACT,KAAK,WAAIC,QAAO,OAAPA,OAAO,OAAOA,QAAO,GAAC,CAC/F;AACAI,OAAO,CAACC,UAAU,CAACZ,MAAM,CAACa,SAAS,CAACG,SAAS,CAACD,cAAc,CAAE,SAACT,KAAK,WAAIC,QAAO,OAAPA,OAAO,OAAOA,QAAO,GAAC,CAC9F;AACAI,OAAO,CAACC,UAAU,CAACZ,MAAM,CAACa,SAAS,CAACI,UAAU,CAACF,cAAc,CAAE,iBAAM,KAAI,GAAC,CAC9E,CACJ,CAAC,CAAC,CAEK,uBAAiDd,SAAS,CAACiB,OAAO,CAA1Db,gBAAgB,oBAAhBA,gBAAgB,CAAEI,kBAAkB,oBAAlBA,kBAAkB,CAAuB,4CAC1E,cAAeR,UAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
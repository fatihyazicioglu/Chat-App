{"ast":null,"code":"/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() {}\nconst hasXHR2 = function () {\n  const xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\nexport class XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? \"443\" : \"80\";\n      }\n      this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    Object.assign(opts, {\n      xd: this.xd,\n      xs: this.xs\n    }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", err => {\n      this.onError(\"xhr post error\", err);\n    });\n  }\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", err => {\n      this.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\nexport class Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    installTimerFunctions(this, opts);\n    this.opts = opts;\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n    this.create();\n  }\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n    const xhr = this.xhr = new XMLHttpRequest(opts);\n    try {\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n      xhr.onreadystatechange = () => {\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          this.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          this.setTimeoutFn(() => {\n            this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n          }, 0);\n        }\n      };\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      this.setTimeoutFn(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    this.xhr.onreadystatechange = empty;\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n    this.xhr = null;\n  }\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n  // @ts-ignore\n  if (typeof attachEvent === \"function\") {\n    // @ts-ignore\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","map":{"version":3,"names":["XMLHttpRequest","globalThis","installTimerFunctions","pick","Emitter","Polling","empty","hasXHR2","xhr","xdomain","responseType","XHR","constructor","opts","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","request","Object","assign","Request","uri","doWrite","data","fn","req","method","on","err","onError","doPoll","onData","bind","pollXhr","async","undefined","create","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","onreadystatechange","readyState","status","onLoad","setTimeoutFn","send","document","index","requestsCount","requests","onSuccess","emit","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent"],"sources":["/home/user/app/e11/Chat-App/frontend/node_modules/engine.io-client/build/esm/transports/polling-xhr.js"],"sourcesContent":["/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}